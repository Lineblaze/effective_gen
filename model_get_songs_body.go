/*
Music Collection

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSongsBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSongsBody{}

// GetSongsBody struct for GetSongsBody
type GetSongsBody struct {
	Id          *string `json:"id,omitempty"`
	Group       *string `json:"group,omitempty"`
	Song        *string `json:"song,omitempty"`
	ReleaseDate *string `json:"releaseDate,omitempty"`
	Text        *string `json:"text,omitempty"`
	Link        *string `json:"link,omitempty"`
	// Limit the number of songs returned
	Limit *int32 `json:"limit,omitempty"`
	// Offset for pagination
	Offset *int32 `json:"offset,omitempty"`
}

// NewGetSongsBody instantiates a new GetSongsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSongsBody() *GetSongsBody {
	this := GetSongsBody{}
	var limit int32 = 10
	this.Limit = &limit
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// NewGetSongsBodyWithDefaults instantiates a new GetSongsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSongsBodyWithDefaults() *GetSongsBody {
	this := GetSongsBody{}
	var limit int32 = 10
	this.Limit = &limit
	var offset int32 = 0
	this.Offset = &offset
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetSongsBody) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetSongsBody) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetSongsBody) SetId(v string) {
	o.Id = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GetSongsBody) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GetSongsBody) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *GetSongsBody) SetGroup(v string) {
	o.Group = &v
}

// GetSong returns the Song field value if set, zero value otherwise.
func (o *GetSongsBody) GetSong() string {
	if o == nil || IsNil(o.Song) {
		var ret string
		return ret
	}
	return *o.Song
}

// GetSongOk returns a tuple with the Song field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetSongOk() (*string, bool) {
	if o == nil || IsNil(o.Song) {
		return nil, false
	}
	return o.Song, true
}

// HasSong returns a boolean if a field has been set.
func (o *GetSongsBody) HasSong() bool {
	if o != nil && !IsNil(o.Song) {
		return true
	}

	return false
}

// SetSong gets a reference to the given string and assigns it to the Song field.
func (o *GetSongsBody) SetSong(v string) {
	o.Song = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *GetSongsBody) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *GetSongsBody) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *GetSongsBody) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *GetSongsBody) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *GetSongsBody) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *GetSongsBody) SetText(v string) {
	o.Text = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *GetSongsBody) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *GetSongsBody) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *GetSongsBody) SetLink(v string) {
	o.Link = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetSongsBody) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetSongsBody) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *GetSongsBody) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetSongsBody) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSongsBody) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetSongsBody) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *GetSongsBody) SetOffset(v int32) {
	o.Offset = &v
}

func (o GetSongsBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSongsBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Song) {
		toSerialize["song"] = o.Song
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["releaseDate"] = o.ReleaseDate
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

type NullableGetSongsBody struct {
	value *GetSongsBody
	isSet bool
}

func (v NullableGetSongsBody) Get() *GetSongsBody {
	return v.value
}

func (v *NullableGetSongsBody) Set(val *GetSongsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSongsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSongsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSongsBody(val *GetSongsBody) *NullableGetSongsBody {
	return &NullableGetSongsBody{value: val, isSet: true}
}

func (v NullableGetSongsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSongsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
