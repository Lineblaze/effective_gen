/*
Music Collection

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SongsTextPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SongsTextPost200Response{}

// SongsTextPost200Response struct for SongsTextPost200Response
type SongsTextPost200Response struct {
	Verses []string `json:"verses,omitempty"`
}

// NewSongsTextPost200Response instantiates a new SongsTextPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSongsTextPost200Response() *SongsTextPost200Response {
	this := SongsTextPost200Response{}
	return &this
}

// NewSongsTextPost200ResponseWithDefaults instantiates a new SongsTextPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSongsTextPost200ResponseWithDefaults() *SongsTextPost200Response {
	this := SongsTextPost200Response{}
	return &this
}

// GetVerses returns the Verses field value if set, zero value otherwise.
func (o *SongsTextPost200Response) GetVerses() []string {
	if o == nil || IsNil(o.Verses) {
		var ret []string
		return ret
	}
	return o.Verses
}

// GetVersesOk returns a tuple with the Verses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SongsTextPost200Response) GetVersesOk() ([]string, bool) {
	if o == nil || IsNil(o.Verses) {
		return nil, false
	}
	return o.Verses, true
}

// HasVerses returns a boolean if a field has been set.
func (o *SongsTextPost200Response) HasVerses() bool {
	if o != nil && !IsNil(o.Verses) {
		return true
	}

	return false
}

// SetVerses gets a reference to the given []string and assigns it to the Verses field.
func (o *SongsTextPost200Response) SetVerses(v []string) {
	o.Verses = v
}

func (o SongsTextPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SongsTextPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Verses) {
		toSerialize["verses"] = o.Verses
	}
	return toSerialize, nil
}

type NullableSongsTextPost200Response struct {
	value *SongsTextPost200Response
	isSet bool
}

func (v NullableSongsTextPost200Response) Get() *SongsTextPost200Response {
	return v.value
}

func (v *NullableSongsTextPost200Response) Set(val *SongsTextPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSongsTextPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSongsTextPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSongsTextPost200Response(val *SongsTextPost200Response) *NullableSongsTextPost200Response {
	return &NullableSongsTextPost200Response{value: val, isSet: true}
}

func (v NullableSongsTextPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSongsTextPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
